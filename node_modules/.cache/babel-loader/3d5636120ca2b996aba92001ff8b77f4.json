{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/users/laura/project-two/src/components/CountriesDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction CountriesDetails(props) {\n  _s();\n\n  const [countries, setCountries] = useState({\n    names: {\n      name: '',\n      full: '',\n      continent: ''\n    },\n    timezone: {\n      name: ''\n    },\n    language: [{\n      language: '',\n      official: ''\n    }],\n    eletricity: {\n      voltage: '',\n      plugs: []\n    },\n    telephone: {\n      calling_code: '',\n      police: '',\n      ambulance: '',\n      fire: ''\n    },\n    vaccinations: [],\n    currency: {\n      name: '',\n      code: '',\n      symbol: '',\n      rate: '',\n      compare: [{\n        name: '',\n        rate: ''\n      }]\n    },\n    weather: {\n      January: {\n        tMin: '',\n        tMax: ''\n      },\n      February: {\n        tMin: '',\n        tMax: ''\n      },\n      March: {\n        tMin: '',\n        tMax: ''\n      },\n      April: {\n        tMin: '',\n        tMax: ''\n      },\n      May: {\n        tMin: '',\n        tMax: ''\n      },\n      June: {\n        tMin: '',\n        tMax: ''\n      },\n      July: {\n        tMin: '',\n        tMax: ''\n      },\n      August: {\n        tMin: '',\n        tMax: ''\n      },\n      September: {\n        tMin: '',\n        tMax: ''\n      },\n      October: {\n        tMin: '',\n        tMax: ''\n      },\n      JanuNovemberary: {\n        tMin: '',\n        tMax: ''\n      },\n      December: {\n        tMin: '',\n        tMax: ''\n      }\n    },\n    advise: {\n      UA: {\n        advise: '',\n        url: ''\n      },\n      CA: {\n        advise: '',\n        url: ''\n      }\n    },\n    neighbors: [{\n      name: ''\n    }]\n  });\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const {\n          name\n        } = props.match.params;\n        const reponse = await axios.get(`https://travelbriefing.org/${name}?format=json`);\n        setCountries({ ...reponse.data\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    console.log(setCountries);\n    fetchData();\n  }, [props]); // console.log(countries.reponse.data.timezone.name)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: countries.names.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [countries.names.full, \", \", countries.names.continent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Timezone: \", countries.timezone.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Language: \", countries.language.language, \"Official language? \", countries.language.official]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountriesDetails, \"g/f72uD80lJBwIKBSNU5C6fLArA=\");\n\n_c = CountriesDetails;\nexport default CountriesDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriesDetails\");","map":{"version":3,"sources":["/mnt/c/users/laura/project-two/src/components/CountriesDetails.js"],"names":["React","useEffect","useState","axios","CountriesDetails","props","countries","setCountries","names","name","full","continent","timezone","language","official","eletricity","voltage","plugs","telephone","calling_code","police","ambulance","fire","vaccinations","currency","code","symbol","rate","compare","weather","January","tMin","tMax","February","March","April","May","June","July","August","September","October","JanuNovemberary","December","advise","UA","url","CA","neighbors","fetchData","match","params","reponse","get","data","err","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nfunction CountriesDetails(props) {\n    const [countries, setCountries] = useState({\n        names: {name: '', full: '', continent: ''},\n        timezone: {name: ''},\n        language: [{language: '', official: ''}],\n        eletricity: {voltage: '', plugs: []},\n        telephone: {calling_code: '', police: '', ambulance: '', fire: ''},\n        vaccinations: [],\n        currency: {name: '', code:'', symbol: '', rate: '', compare: [{name: '', rate: ''}]},\n        weather: {January: {tMin: '', tMax: ''}, February: {tMin: '', tMax: ''}, March: {tMin: '', tMax: ''}, April: {tMin: '', tMax: ''}, May: {tMin: '', tMax: ''}, June: {tMin: '', tMax: ''}, July: {tMin: '', tMax: ''}, August: {tMin: '', tMax: ''}, September: {tMin: '', tMax: ''}, October: {tMin: '', tMax: ''}, JanuNovemberary: {tMin: '', tMax: ''}, December: {tMin: '', tMax: ''}},\n        advise: {UA: {advise: '', url: ''}, CA: {advise: '', url: ''}},\n        neighbors: [{name: ''}],\n    });\n\n    useEffect(()=>{\n        async function fetchData() {\n            try {\n            const { name } = props.match.params;\n            const reponse = await axios.get(`https://travelbriefing.org/${name}?format=json`);\n            \n            setCountries({...reponse.data});\n            } catch (err) {\n                console.log(err);\n            }\n        }\n            console.log(setCountries)\n        fetchData()         \n    }, [props])\n\n    // console.log(countries.reponse.data.timezone.name)\n\n    return (\n        <div>\n            <div>\n    <h1>{countries.names.name}</h1>\n    <h3>{countries.names.full}, {countries.names.continent}</h3>\n    <p>Timezone: {countries.timezone.name}</p>\n    <p>Language: {countries.language.language} \n    Official language? {countries.language.official}</p>\n            </div>\n            \n            <div>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default CountriesDetails;"]},"metadata":{},"sourceType":"module"}